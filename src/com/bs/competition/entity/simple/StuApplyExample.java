package com.bs.competition.entity.simple;

import java.util.ArrayList;
import java.util.List;

public class StuApplyExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public StuApplyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andStudentidIsNull() {
			addCriterion("studentid is null");
			return (Criteria) this;
		}

		public Criteria andStudentidIsNotNull() {
			addCriterion("studentid is not null");
			return (Criteria) this;
		}

		public Criteria andStudentidEqualTo(String value) {
			addCriterion("studentid =", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotEqualTo(String value) {
			addCriterion("studentid <>", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidGreaterThan(String value) {
			addCriterion("studentid >", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidGreaterThanOrEqualTo(String value) {
			addCriterion("studentid >=", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidLessThan(String value) {
			addCriterion("studentid <", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidLessThanOrEqualTo(String value) {
			addCriterion("studentid <=", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidLike(String value) {
			addCriterion("studentid like", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotLike(String value) {
			addCriterion("studentid not like", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidIn(List<String> values) {
			addCriterion("studentid in", values, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotIn(List<String> values) {
			addCriterion("studentid not in", values, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidBetween(String value1, String value2) {
			addCriterion("studentid between", value1, value2, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotBetween(String value1, String value2) {
			addCriterion("studentid not between", value1, value2, "studentid");
			return (Criteria) this;
		}

		public Criteria andCardIsNull() {
			addCriterion("card is null");
			return (Criteria) this;
		}

		public Criteria andCardIsNotNull() {
			addCriterion("card is not null");
			return (Criteria) this;
		}

		public Criteria andCardEqualTo(String value) {
			addCriterion("card =", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardNotEqualTo(String value) {
			addCriterion("card <>", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardGreaterThan(String value) {
			addCriterion("card >", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardGreaterThanOrEqualTo(String value) {
			addCriterion("card >=", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardLessThan(String value) {
			addCriterion("card <", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardLessThanOrEqualTo(String value) {
			addCriterion("card <=", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardLike(String value) {
			addCriterion("card like", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardNotLike(String value) {
			addCriterion("card not like", value, "card");
			return (Criteria) this;
		}

		public Criteria andCardIn(List<String> values) {
			addCriterion("card in", values, "card");
			return (Criteria) this;
		}

		public Criteria andCardNotIn(List<String> values) {
			addCriterion("card not in", values, "card");
			return (Criteria) this;
		}

		public Criteria andCardBetween(String value1, String value2) {
			addCriterion("card between", value1, value2, "card");
			return (Criteria) this;
		}

		public Criteria andCardNotBetween(String value1, String value2) {
			addCriterion("card not between", value1, value2, "card");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNull() {
			addCriterion("addtime is null");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNotNull() {
			addCriterion("addtime is not null");
			return (Criteria) this;
		}

		public Criteria andAddtimeEqualTo(Long value) {
			addCriterion("addtime =", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotEqualTo(Long value) {
			addCriterion("addtime <>", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThan(Long value) {
			addCriterion("addtime >", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThanOrEqualTo(Long value) {
			addCriterion("addtime >=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThan(Long value) {
			addCriterion("addtime <", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThanOrEqualTo(Long value) {
			addCriterion("addtime <=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeIn(List<Long> values) {
			addCriterion("addtime in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotIn(List<Long> values) {
			addCriterion("addtime not in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeBetween(Long value1, Long value2) {
			addCriterion("addtime between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotBetween(Long value1, Long value2) {
			addCriterion("addtime not between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andFileidIsNull() {
			addCriterion("fileid is null");
			return (Criteria) this;
		}

		public Criteria andFileidIsNotNull() {
			addCriterion("fileid is not null");
			return (Criteria) this;
		}

		public Criteria andFileidEqualTo(String value) {
			addCriterion("fileid =", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidNotEqualTo(String value) {
			addCriterion("fileid <>", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidGreaterThan(String value) {
			addCriterion("fileid >", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidGreaterThanOrEqualTo(String value) {
			addCriterion("fileid >=", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidLessThan(String value) {
			addCriterion("fileid <", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidLessThanOrEqualTo(String value) {
			addCriterion("fileid <=", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidLike(String value) {
			addCriterion("fileid like", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidNotLike(String value) {
			addCriterion("fileid not like", value, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidIn(List<String> values) {
			addCriterion("fileid in", values, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidNotIn(List<String> values) {
			addCriterion("fileid not in", values, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidBetween(String value1, String value2) {
			addCriterion("fileid between", value1, value2, "fileid");
			return (Criteria) this;
		}

		public Criteria andFileidNotBetween(String value1, String value2) {
			addCriterion("fileid not between", value1, value2, "fileid");
			return (Criteria) this;
		}

		public Criteria andGroupsIsNull() {
			addCriterion("groups is null");
			return (Criteria) this;
		}

		public Criteria andGroupsIsNotNull() {
			addCriterion("groups is not null");
			return (Criteria) this;
		}

		public Criteria andGroupsEqualTo(Integer value) {
			addCriterion("groups =", value, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsNotEqualTo(Integer value) {
			addCriterion("groups <>", value, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsGreaterThan(Integer value) {
			addCriterion("groups >", value, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsGreaterThanOrEqualTo(Integer value) {
			addCriterion("groups >=", value, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsLessThan(Integer value) {
			addCriterion("groups <", value, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsLessThanOrEqualTo(Integer value) {
			addCriterion("groups <=", value, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsIn(List<Integer> values) {
			addCriterion("groups in", values, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsNotIn(List<Integer> values) {
			addCriterion("groups not in", values, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsBetween(Integer value1, Integer value2) {
			addCriterion("groups between", value1, value2, "groups");
			return (Criteria) this;
		}

		public Criteria andGroupsNotBetween(Integer value1, Integer value2) {
			addCriterion("groups not between", value1, value2, "groups");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNull() {
			addCriterion("remark is null");
			return (Criteria) this;
		}

		public Criteria andRemarkIsNotNull() {
			addCriterion("remark is not null");
			return (Criteria) this;
		}

		public Criteria andRemarkEqualTo(String value) {
			addCriterion("remark =", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotEqualTo(String value) {
			addCriterion("remark <>", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThan(String value) {
			addCriterion("remark >", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("remark >=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThan(String value) {
			addCriterion("remark <", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLessThanOrEqualTo(String value) {
			addCriterion("remark <=", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkLike(String value) {
			addCriterion("remark like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotLike(String value) {
			addCriterion("remark not like", value, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkIn(List<String> values) {
			addCriterion("remark in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotIn(List<String> values) {
			addCriterion("remark not in", values, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkBetween(String value1, String value2) {
			addCriterion("remark between", value1, value2, "remark");
			return (Criteria) this;
		}

		public Criteria andRemarkNotBetween(String value1, String value2) {
			addCriterion("remark not between", value1, value2, "remark");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table stuapply
	 * @mbggenerated  Sun Apr 10 10:52:06 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stuapply
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 30 19:37:13 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
    
    /** paging param start */
   	protected Integer start;
   	/** paging param end */
   	protected Integer end;

   	public Integer getStart() {
   		return start;
   	}

   	public void setStart(Integer start) {
   		this.start = start;
   	}

   	public Integer getEnd() {
   		return end;
   	}

   	public void setEnd(Integer end) {
   		this.end = end;
   	}
}