package com.bs.competition.entity.simple;

import java.util.ArrayList;
import java.util.List;

public class ScoreExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public ScoreExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andStudentidIsNull() {
			addCriterion("studentid is null");
			return (Criteria) this;
		}

		public Criteria andStudentidIsNotNull() {
			addCriterion("studentid is not null");
			return (Criteria) this;
		}

		public Criteria andStudentidEqualTo(String value) {
			addCriterion("studentid =", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotEqualTo(String value) {
			addCriterion("studentid <>", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidGreaterThan(String value) {
			addCriterion("studentid >", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidGreaterThanOrEqualTo(String value) {
			addCriterion("studentid >=", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidLessThan(String value) {
			addCriterion("studentid <", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidLessThanOrEqualTo(String value) {
			addCriterion("studentid <=", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidLike(String value) {
			addCriterion("studentid like", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotLike(String value) {
			addCriterion("studentid not like", value, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidIn(List<String> values) {
			addCriterion("studentid in", values, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotIn(List<String> values) {
			addCriterion("studentid not in", values, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidBetween(String value1, String value2) {
			addCriterion("studentid between", value1, value2, "studentid");
			return (Criteria) this;
		}

		public Criteria andStudentidNotBetween(String value1, String value2) {
			addCriterion("studentid not between", value1, value2, "studentid");
			return (Criteria) this;
		}

		public Criteria andTeacheridIsNull() {
			addCriterion("teacherid is null");
			return (Criteria) this;
		}

		public Criteria andTeacheridIsNotNull() {
			addCriterion("teacherid is not null");
			return (Criteria) this;
		}

		public Criteria andTeacheridEqualTo(String value) {
			addCriterion("teacherid =", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridNotEqualTo(String value) {
			addCriterion("teacherid <>", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridGreaterThan(String value) {
			addCriterion("teacherid >", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridGreaterThanOrEqualTo(String value) {
			addCriterion("teacherid >=", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridLessThan(String value) {
			addCriterion("teacherid <", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridLessThanOrEqualTo(String value) {
			addCriterion("teacherid <=", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridLike(String value) {
			addCriterion("teacherid like", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridNotLike(String value) {
			addCriterion("teacherid not like", value, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridIn(List<String> values) {
			addCriterion("teacherid in", values, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridNotIn(List<String> values) {
			addCriterion("teacherid not in", values, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridBetween(String value1, String value2) {
			addCriterion("teacherid between", value1, value2, "teacherid");
			return (Criteria) this;
		}

		public Criteria andTeacheridNotBetween(String value1, String value2) {
			addCriterion("teacherid not between", value1, value2, "teacherid");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNull() {
			addCriterion("addtime is null");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNotNull() {
			addCriterion("addtime is not null");
			return (Criteria) this;
		}

		public Criteria andAddtimeEqualTo(Long value) {
			addCriterion("addtime =", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotEqualTo(Long value) {
			addCriterion("addtime <>", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThan(Long value) {
			addCriterion("addtime >", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThanOrEqualTo(Long value) {
			addCriterion("addtime >=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThan(Long value) {
			addCriterion("addtime <", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThanOrEqualTo(Long value) {
			addCriterion("addtime <=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeIn(List<Long> values) {
			addCriterion("addtime in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotIn(List<Long> values) {
			addCriterion("addtime not in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeBetween(Long value1, Long value2) {
			addCriterion("addtime between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotBetween(Long value1, Long value2) {
			addCriterion("addtime not between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andNewscoreIsNull() {
			addCriterion("newscore is null");
			return (Criteria) this;
		}

		public Criteria andNewscoreIsNotNull() {
			addCriterion("newscore is not null");
			return (Criteria) this;
		}

		public Criteria andNewscoreEqualTo(Integer value) {
			addCriterion("newscore =", value, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreNotEqualTo(Integer value) {
			addCriterion("newscore <>", value, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreGreaterThan(Integer value) {
			addCriterion("newscore >", value, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreGreaterThanOrEqualTo(Integer value) {
			addCriterion("newscore >=", value, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreLessThan(Integer value) {
			addCriterion("newscore <", value, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreLessThanOrEqualTo(Integer value) {
			addCriterion("newscore <=", value, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreIn(List<Integer> values) {
			addCriterion("newscore in", values, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreNotIn(List<Integer> values) {
			addCriterion("newscore not in", values, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreBetween(Integer value1, Integer value2) {
			addCriterion("newscore between", value1, value2, "newscore");
			return (Criteria) this;
		}

		public Criteria andNewscoreNotBetween(Integer value1, Integer value2) {
			addCriterion("newscore not between", value1, value2, "newscore");
			return (Criteria) this;
		}

		public Criteria andPrascoreIsNull() {
			addCriterion("prascore is null");
			return (Criteria) this;
		}

		public Criteria andPrascoreIsNotNull() {
			addCriterion("prascore is not null");
			return (Criteria) this;
		}

		public Criteria andPrascoreEqualTo(Integer value) {
			addCriterion("prascore =", value, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreNotEqualTo(Integer value) {
			addCriterion("prascore <>", value, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreGreaterThan(Integer value) {
			addCriterion("prascore >", value, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreGreaterThanOrEqualTo(Integer value) {
			addCriterion("prascore >=", value, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreLessThan(Integer value) {
			addCriterion("prascore <", value, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreLessThanOrEqualTo(Integer value) {
			addCriterion("prascore <=", value, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreIn(List<Integer> values) {
			addCriterion("prascore in", values, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreNotIn(List<Integer> values) {
			addCriterion("prascore not in", values, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreBetween(Integer value1, Integer value2) {
			addCriterion("prascore between", value1, value2, "prascore");
			return (Criteria) this;
		}

		public Criteria andPrascoreNotBetween(Integer value1, Integer value2) {
			addCriterion("prascore not between", value1, value2, "prascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreIsNull() {
			addCriterion("feascore is null");
			return (Criteria) this;
		}

		public Criteria andFeascoreIsNotNull() {
			addCriterion("feascore is not null");
			return (Criteria) this;
		}

		public Criteria andFeascoreEqualTo(Integer value) {
			addCriterion("feascore =", value, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreNotEqualTo(Integer value) {
			addCriterion("feascore <>", value, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreGreaterThan(Integer value) {
			addCriterion("feascore >", value, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreGreaterThanOrEqualTo(Integer value) {
			addCriterion("feascore >=", value, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreLessThan(Integer value) {
			addCriterion("feascore <", value, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreLessThanOrEqualTo(Integer value) {
			addCriterion("feascore <=", value, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreIn(List<Integer> values) {
			addCriterion("feascore in", values, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreNotIn(List<Integer> values) {
			addCriterion("feascore not in", values, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreBetween(Integer value1, Integer value2) {
			addCriterion("feascore between", value1, value2, "feascore");
			return (Criteria) this;
		}

		public Criteria andFeascoreNotBetween(Integer value1, Integer value2) {
			addCriterion("feascore not between", value1, value2, "feascore");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table score
	 * @mbggenerated  Wed Apr 13 14:31:55 CST 2017
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table score
     *
     * @mbggenerated do_not_delete_during_merge Mon Mar 28 21:11:51 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}